def get_neighbours(n_clusters, topology):
    r1 = {}
    r2 = {}

    if n_clusters == 3:
        r1 = r2 = {
            0: [1, 2],
            1: [0, 2],
            2: [0, 1]
        }

    else:
        if topology == "rectangular":
            if (n_clusters == 4):
                r1 = r2 = {
                    0: [1, 2, 3],
                    1: [0, 2, 3],
                    2: [0, 1, 3],
                    3: [0, 1, 2],
                }
            elif (n_clusters == 9):
                r1 = {
                    0: [1, 3, 4],
                    1: [0, 2, 3, 4, 5],
                    2: [1, 4, 5],
                    3: [0, 1, 4, 6, 7],
                    4: [0, 1, 2, 3, 5, 6, 7, 8],
                    5: [1, 2, 4, 7, 8],
                    6: [3, 4, 7],
                    7: [3, 4, 5, 6, 8],
                    8: [4, 5, 7]
                }
                r2 = {
                    0: [1, 2, 3, 4, 5, 6, 7, 8],
                    1: [0, 2, 3, 4, 5, 6, 7, 8],
                    2: [0, 1, 3, 4, 5, 6, 7, 8],
                    3: [0, 1, 2, 4, 5, 6, 7, 8],
                    4: [0, 1, 2, 3, 5, 6, 7, 8],
                    5: [0, 1, 2, 3, 4, 6, 7, 8],
                    6: [0, 1, 2, 3, 4, 5, 7, 8],
                    7: [0, 1, 2, 3, 4, 5, 6, 8],
                    8: [0, 1, 2, 3, 4, 5, 6, 7]
                }
            elif (n_clusters == 16):
                r1 = {
                    0: [1, 4, 5],
                    1: [0, 2, 4, 5, 6],
                    2: [1, 3, 5, 6, 7],
                    3: [2, 6, 7],
                    4: [0, 1, 5, 8, 9],
                    5: [0, 1, 2, 4, 6, 8, 9, 10],
                    6: [1, 2, 3, 5, 7, 9, 10, 11],
                    7: [2, 3, 6, 10, 11],
                    8: [4, 5, 9, 12, 13],
                    9: [4, 5, 6, 8, 10, 12, 13, 14],
                    10: [5, 6, 7, 9, 11, 13, 14, 15],
                    11: [6, 7, 10, 14, 15],
                    12: [8, 9, 13],
                    13: [8, 9, 10, 12, 14],
                    14: [9, 10, 11, 13, 15],
                    15: [10, 11, 14]
                }
                r2 = {
                    0: [1, 2, 4, 5, 6, 8, 9, 10],
                    1: [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
                    2: [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11],
                    3: [1, 2, 5, 6, 7, 9, 10, 11],
                    4: [0, 1, 2, 5, 6, 8, 9, 10, 12, 13, 14],
                    5: [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                    6: [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                    7: [1, 2, 3, 5, 6, 9, 10, 11, 13, 14, 15],
                    8: [0, 1, 2, 4, 5, 6, 9, 10, 12, 13, 14],
                    9: [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15],
                    10: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15],
                    11: [1, 2, 3, 5, 6, 7, 9, 10, 13, 14, 15],
                    12: [4, 5, 6, 8, 9, 10, 13, 14],
                    13: [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15],
                    14: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15],
                    15: [5, 6, 7, 9, 10, 11, 13, 14]
                }
            elif (n_clusters == 25):
                r1 = {
                    0: [1, 5, 6],
                    1: [0, 2, 5, 6, 7],
                    2: [1, 3, 6, 7, 8],
                    3: [2, 4, 7, 8, 9],
                    4: [3, 8, 9],
                    5: [0, 1, 6, 10, 11],
                    6: [0, 1, 2, 5, 7, 10, 11, 12],
                    7: [1, 2, 3, 6, 8, 11, 12, 13],
                    8: [2, 3, 4, 7, 9, 12, 13, 14],
                    9: [3, 4, 8, 13, 14],
                    10: [5, 6, 11, 15, 16],
                    11: [5, 6, 7, 10, 12, 15, 16, 17],
                    12: [6, 7, 8, 11, 13, 16, 17, 18],
                    13: [7, 8, 9, 12, 14, 17, 18, 19],
                    14: [8, 9, 13, 18, 19],
                    15: [10, 11, 16, 20, 21],
                    16: [10, 11, 12, 15, 17, 20, 21, 22],
                    17: [11, 12, 13, 16, 18, 21, 22, 23],
                    18: [12, 13, 14, 17, 19, 22, 23, 24],
                    19: [13, 14, 18, 23, 24],
                    20: [15, 16, 21],
                    21: [15, 16, 17, 20, 22],
                    22: [16, 17, 18, 21, 23],
                    23: [17, 18, 22, 19, 24],
                    24: [18, 19, 23]
                }
                r2 = {
                    0: [1, 2, 5, 6, 7, 10, 11, 12],
                    1: [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13],
                    2: [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
                    3: [1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14],
                    4: [2, 3, 7, 8, 9, 12, 13, 14],
                    5: [0, 1, 2, 6, 7, 10, 11, 12, 15, 16, 17],
                    6: [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18],
                    7: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
                    8: [1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19],
                    9: [2, 3, 4, 7, 8, 12, 13, 14, 17, 18, 19],
                    10: [0, 1, 2, 5, 6, 7, 11, 12, 15, 16, 17, 20, 21, 22],
                    11: [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23],
                    12: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
                    13: [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 21, 22, 23, 24],
                    14: [2, 3, 4, 7, 8, 9, 12, 13, 17, 18, 19, 22, 23, 24],
                    15: [5, 6, 7, 10, 11, 12, 16, 17, 20, 21, 22],
                    16: [5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23],
                    17: [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24],
                    18: [6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24],
                    19: [7, 8, 9, 12, 13, 14, 17, 18, 22, 23, 24],
                    20: [10, 11, 12, 15, 16, 17, 21, 22],
                    21: [10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23],
                    22: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 10, 21, 23, 24],
                    23: [11, 12, 13, 14, 16, 17, 18, 21, 22, 19, 24],
                    24: [12, 13, 14, 17, 18, 19, 22, 23]
                }

        elif topology == "hexagonal":
            if (n_clusters == 4):
                r1 = {
                    0: [1, 2],
                    1: [0, 2, 3],
                    2: [0, 1, 3],
                    3: [1, 2]
                }
                r2 = {
                    0: [1, 2, 3],
                    1: [0, 2, 3],
                    2: [0, 1, 3],
                    3: [0, 1, 2]
                }
            elif (n_clusters == 9):
                r1 = {
                    0: [1, 3],
                    1: [0, 2, 3, 4],
                    2: [1, 4, 5],
                    3: [0, 1, 4, 6, 7],
                    4: [1, 2, 3, 5, 7, 8],
                    5: [2, 4, 8],
                    6: [3, 7],
                    7: [3, 4, 6, 8],
                    8: [4, 5, 7]
                }
                r2 = {
                    0: [1, 2, 3, 4, 6, 7],
                    1: [0, 2, 3, 4, 5, 6, 7, 8],
                    2: [0, 1, 3, 4, 5, 7, 8],
                    3: [0, 1, 2, 4, 5, 6, 7, 8],
                    4: [0, 1, 2, 3, 5, 6, 7, 8],
                    5: [1, 2, 3, 4, 7, 8],
                    6: [0, 1, 3, 4, 7, 8],
                    7: [0, 1, 2, 3, 4, 5, 6, 8],
                    8: [1, 2, 3, 4, 5, 6, 7]
                }
            elif (n_clusters == 16):
                r1 = {
                    0: [1, 4],
                    1: [0, 2, 4, 5],
                    2: [1, 3, 5, 6],
                    3: [2, 6, 7],
                    4: [0, 1, 5, 8, 9],
                    5: [1, 2, 4, 6, 9, 10],
                    6: [2, 3, 5, 7, 10, 11],
                    7: [3, 6, 11],
                    8: [4, 9, 12],
                    9: [4, 5, 8, 10, 12, 13],
                    10: [5, 6, 9, 11, 13, 14],
                    11: [6, 7, 10, 14, 15],
                    12: [8, 9, 13],
                    13: [9, 10, 12, 14],
                    14: [10, 11, 13, 15],
                    15: [11, 14]
                }
                r2 = {
                    0: [1, 2, 4, 5, 8, 9],
                    1: [0, 2, 3, 4, 5, 6, 8, 9, 10],
                    2: [0, 1, 3, 4, 5, 6, 7, 9, 10, 11],
                    3: [1, 2, 5, 6, 7, 10, 11],
                    4: [0, 1, 2, 5, 6, 8, 9, 10, 12, 13],
                    5: [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14],
                    6: [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 15],
                    7: [2, 3, 5, 6, 10, 11, 14, 15],
                    8: [0, 1, 4, 5, 9, 10, 12, 13],
                    9: [0, 1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14],
                    10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15],
                    11: [2, 3, 5, 6, 7, 9, 10, 13, 14, 15],
                    12: [4, 5, 8, 9, 10, 13, 14],
                    13: [4, 5, 6, 8, 9, 10, 11, 12, 14, 15],
                    14: [5, 6, 7, 9, 10, 11, 12, 13, 15],
                    15: [6, 7, 10, 11, 13, 14]
                }
            elif (n_clusters == 25):
                r1 = {
                    0: [1, 5],
                    1: [0, 2, 5, 6],
                    2: [1, 3, 6, 7],
                    3: [2, 4, 7, 8],
                    4: [3, 8, 9],
                    5: [0, 1, 6, 10, 11],
                    6: [1, 2, 5, 7, 11, 12],
                    7: [2, 3, 6, 8, 11, 12],
                    8: [3, 4, 7, 9, 13, 14],
                    9: [4, 8, 14],
                    10: [5, 11, 15],
                    11: [5, 6, 10, 12, 15, 16],
                    12: [6, 7, 11, 13, 16, 17],
                    13: [7, 8, 12, 14, 17, 18],
                    14: [8, 9, 13, 18, 19],
                    15: [10, 11, 16, 20, 21],
                    16: [11, 12, 15, 17, 21, 22],
                    17: [12, 13, 16, 18, 22, 23],
                    18: [13, 14, 17, 19, 23, 24],
                    19: [14, 18, 24],
                    20: [15, 21],
                    21: [15, 16, 20, 22],
                    22: [16, 17, 21, 23],
                    23: [17, 18, 22, 24],
                    24: [18, 19, 23]
                }
                r2 = {
                    0: [1, 2, 5, 6, 10, 11],
                    1: [0, 2, 3, 5, 6, 7, 10, 11, 12],
                    2: [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13],
                    3: [1, 2, 4, 6, 7, 8, 9, 12, 13, 14],
                    4: [2, 3, 7, 8, 9, 13, 14],
                    5: [0, 1, 2, 6, 7, 10, 11, 12, 15, 16],
                    6: [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17],
                    7: [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18],
                    8: [2, 3, 4, 6, 7, 9, 12, 13, 14],
                    9: [3, 4, 7, 8, 13, 14, 18, 19],
                    10: [0, 1, 5, 6, 11, 12, 15, 16, 10, 21],
                    11: [0, 1, 2, 5, 6, 7, 10, 12, 13, 15, 16, 17, 20, 21, 22],
                    12: [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23],
                    13: [2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 22, 23, 24],
                    14: [3, 4, 7, 8, 9, 12, 13, 17, 18, 19, 23, 24],
                    15: [5, 6, 10, 11, 12, 16, 17, 20, 21, 22],
                    16: [5, 6, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23],
                    17: [6, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24],
                    18: [7, 8, 9, 12, 13, 14, 16, 17, 19, 22, 23, 24],
                    19: [8, 9, 13, 14, 17, 18, 23, 24],
                    20: [10, 11, 15, 16, 21, 22],
                    21: [10, 11, 12, 15, 16, 17, 20, 22, 23],
                    22: [11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24],
                    23: [12, 13, 14, 16, 17, 18, 19, 21, 22, 24],
                    24: [13, 14, 17, 18, 19, 22, 23]
                }

    return r1, r2

if __name__ == '__main__':

    r1_r, r2_r = get_neighbours(25, "rectangular")
    r1_h, r2_h = get_neighbours(25, "hexagonal")

    print("rectangular 9 neuron\n\n"
          "r1= ", r1_r,
          "\n\nr2=", r2_r)
    print("==================================================")
    print("\nhexagonal 9 neuron\n\n"
          "r1= ", r1_h,
          "\n\nr2=", r2_h)
    print("\n\n==================================================\n")

    for i in r1_r[8]:
        print(i)